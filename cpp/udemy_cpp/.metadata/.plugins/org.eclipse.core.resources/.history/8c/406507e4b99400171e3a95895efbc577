/*
 * Complex.h
 *
 *  Created on: Sep 8, 2017
 *      Author: ethen
 */

#ifndef COMPLEX_H_
#define COMPLEX_H_

#include<iostream>
using namespace std;

namespace basics {

class Complex {
private:
	double real;
	double imaginary;

public:
	// constructor
	Complex();
	Complex(double real, double imaginary);

	// copy constructor
	Complex(const Complex &other);

	// overload assignment operator
	const Complex &operator=(const Complex &other);
	friend ostream &operator<<(ostream &out, const Test &test) {
		out << test.id << ": " << test.name;
		return out;
	}
	virtual ~Complex();
};

} /* namespace basics */

#endif /* COMPLEX_H_ */
